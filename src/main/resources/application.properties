server.port=8080

mybatis.mapper-locations=classpath:mapper/*.xml
spring.shardingsphere.mode.type=Memory
spring.main.allow-bean-definition-overriding=true
spring.shardingsphere.datasource.names=ds1,ds2
#ds1 datasource
spring.shardingsphere.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1.jdbc-url=jdbc:mysql://localhost:3306/ds1?useUnicode=true&useSSL=false&zeroDateTimeBehavior=convertToNull&characterEncoding=UTF-8&allowMultiQueries=true&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=root
#ds2 datasource
spring.shardingsphere.datasource.ds2.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds2.jdbc-url=jdbc:mysql://localhost:3306/ds2?useUnicode=true&useSSL=false&zeroDateTimeBehavior=convertToNull&characterEncoding=UTF-8&allowMultiQueries=true&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.ds2.username=root
spring.shardingsphere.datasource.ds2.password=root

#分片的表
spring.shardingsphere.rules.sharding.tables.tb_user.actual-data-nodes=ds$->{1..2}.tb_user$->{0..2}
spring.shardingsphere.rules.sharding.tables.tb_user.key-generate-strategy.column=id
spring.shardingsphere.rules.sharding.tables.tb_user.key-generate-strategy.key-generator-name=SNOWFLAKE

#分库strategy
spring.shardingsphere.rules.sharding.tables.tb_user.database-strategy.standard.sharding-column= id
spring.shardingsphere.rules.sharding.tables.tb_user.database-strategy.standard.sharding-algorithm-name=database-inline
#split database INLINE properties
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.props.algorithm-expression=ds$->{id<3?1:2}

#分表strategy
spring.shardingsphere.rules.sharding.tables.tb_user.table-strategy.standard.sharding-column=id
spring.shardingsphere.rules.sharding.tables.tb_user.table-strategy.standard.sharding-algorithm-name=table-inline
#split table INLINE properties
spring.shardingsphere.rules.sharding.sharding-algorithms.table-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.table-inline.props.algorithm-expression=tb_user$->{id % 3}

#sharding jdbc properties
spring.shardingsphere.props.sql-simple=true
spring.shardingsphere.props.sql-show=true